<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>On Hill et al's conjecture for calculating the subtree prune and regraft distance between phylogenies</title>
<meta name="Subject" content="BMC Evolutionary Biology 2010, 10:334. doi:10.1186/1471-2148-10-334"/>
<meta name="Keywords" content=" "/>
<meta name="Author" content="Simone Linz"/>
<meta name="Creator" content="Arbortext Advanced Print Publisher 10.0.1082/W Unicode"/>
<meta name="Producer" content="Acrobat Distiller 9.0.0 (Windows)"/>
<meta name="CreationDate" content=""/>
</head>
<body>
<pre>
Linz BMC Evolutionary Biology 2010, 10:334
http://www.biomedcentral.com/1471-2148/10/334

CORRESPONDENCE

Open Access

On Hill et al’s conjecture for calculating the
subtree prune and regraft distance between
phylogenies
Simone Linz

Abstract
Background: Recently, Hill et al. [1] implemented a new software package–called SPRIT–which aims at calculating
the minimum number of horizontal gene transfer events that is needed to simultaneously explain the evolution of
two rooted binary phylogenetic trees on the same set of taxa. To this end, SPRIT computes the closely related socalled rooted subtree prune and regraft distance between two phylogenies. However, calculating this distance is
an NP-hard problem and exact algorithms are often only applicable to small- or medium-sized problem instances.
Trying to overcome this problem, Hill et al. propose a divide-and-conquer approach to speed up their algorithm
and conjecture that this approach can be used to compute the rooted subtree prune and regraft distance exactly.
Results: In this note, we present a counterexample to Hill et al’s conjecture and subsequently show that a
modified version of their conjecture holds.
Conclusion: While Hill et al’s conjecture may result in an overestimate of the rooted subtree prune and regraft
distance, a slightly more restricted version of their approach gives the desired outcome and can be applied to
speed up the exact calculation of this distance between two phylogenies.

Background
In recent years, one of the main research foci in the
development of theoretical frameworks that aim at
approaching questions in evolutionary biology turns
from the reconstruction of phylogenetic trees towards
the reconstruction of phylogenetic networks. This has
partly been triggered by the exponentially growing
amount of available sequence data arising from whole
genome sequencing projects and a successive detection
of genes whose sequences are chimeras of distinct
ancestral gene sequences, and hence, are likely to be the
result of reticulation (e.g. horizontal gene transfer or
hybridization). Although evolutionary biologists are now
mostly acknowledging the existence of species arising
from reticulation within certain groups of organisms,
the extent to which such events have influenced the
evolutionary history for a set of present-day species
remains controversially discussed until today. To shed
light on this question, Hill et al. [1] recently published a
Correspondence: simone_linz@yahoo.de
Department of Computer Science, Technical University of Catalonia,
Barcelona, Spain

study that is centered around the identification and
quantification of horizontal gene transfer. The authors
have implemented a new software package–called
SPRIT–consisting of a heuristic as well as an exact algorithm, applied it to several data sets of variable size, and
compared their results and running times with those
obtained from other algorithms that have previously
been developed to analyze reticulate evolution.
Algorithmically, SPRIT draws on ideas that are borrowed from work that has been done in the context of
the graph-theoretic operation of rooted subtree prune
and regraft (rSPR) which is a popular tool to quantify
the dissimilarity between two trees. Loosely speaking, an
rSPR operation cuts (prunes) a subtree and reattaches
(regrafts) it to another part of the tree. A lower bound
on the number of reticulation events that is needed to
simultaneously explain two phylogenies is the minimum
number of rSPR operations that transform one phylogeny into the other [2,3]. This minimum number, which
is computed by SPRIT, is referred to as the rSPR distance. However, since the task of calculating this
distance is an NP-hard optimization problem, the

© 2010 Linz; licensee BioMed Central Ltd. This is an Open Access article distributed under the terms of the Creative Commons
Attribution License (http://creativecommons.org/licenses/by/2.0), which permits unrestricted use, distribution, and reproduction in
any medium, provided the original work is properly cited.

Linz BMC Evolutionary Biology 2010, 10:334
http://www.biomedcentral.com/1471-2148/10/334

application of exact algorithms is often restricted to
medium-sized data sets.
In trying to overcome this obstacle, thus to speed up
SPRIT, Hill et al. propose a divide-and-conquer-type
reduction that breaks the problem into several smaller
and more tractable subproblems before calculating the
rSPR distance for each subproblem separately. Briefly,
the authors conjecture that the sum of rSPR distances
over all smaller subproblems is equal to the rSPR distance of the original unreduced trees. In this note, we
give a counterexample to their conjecture. Nevertheless,
we subsequently show that a slightly more restricted
version of their conjecture holds and can be used to
exactly calculate the rSPR distance between two phylogenies by breaking the problem into smaller
subproblems.
The remainder of this paper is organized as follows.
The next section contains some mathematical preliminaries that are needed to formally state Hill at al’s conjecture. This conjecture is then given in the subsequent
section which also contains the aforementioned counterexample. We then show that a modified version of the
conjecture holds in the following section. We end this
note with a brief conclusion.

Preliminaries
In this section, we give some preliminary definitions that
are used throughout this paper. Unless otherwise stated,
the notation and terminology follows [4].
Phylogenetic Trees

A rooted binary phylogenetic X-tree  is a rooted tree
whose root has degree two while all other interior vertices have degree three and whose leaf set is X . The set
X is the label set of  and is frequently denoted by
( ) . Furthermore, let X′ be a subset of X. The minimal rooted subtree of  that connects all the leaves in
X′ is denoted by  (X′) while the restriction of  to X′,
denoted by  |X′, is the rooted binary phylogenetic
X′-tree obtained from  (X′) by contracting all degreetwo vertices apart from the root.

Page 2 of 6

by a rooted subtree prune and regraft (rSPR) operation.
The rSPR distance between two rooted binary phylogenetic X-trees  and  ′ is the minimum number of
rSPR operations that transform  into  ′ . We denote
this distance by d rSPR ( ,  ′) .
Agreement Forests

Let  and  ′ be two rooted binary phylogenetic
X-trees. Again, to make the following work, regard the
roots of  and  ′ as a vertex r adjoined to the original root by a pendant edge. An agreement forest
 = {p , 1 , 2 ,..., k} for  and  ′ is a partition of
X ∪ {} such that  ∈  and the following properties
are satisfied:
(i) for all i Î {r, 1, ..., k}, we have  | i ≅  ′|i ,
and
(ii) the trees in { (i ) : i ∈ { , 1,..., k}} and
{ ′(i ) : i ∈ { , 1,..., k}} are vertex-disjoint subtrees
of  and  ′ , respectively.
Throughout the remainder of this note, we will interchangeably refer to { |  ,  | 1 ,  | 2 ,...,  | k}
and { , 1 ,..., k} as an agreement forest for  and
 ′ . A maximum-agreement forest for  and  ′ is an
agreement forest for  and  ′ with the smallest number of elements over all agreement forests for  and
 ′ . Note that a maximum-agreement forest for  and
 ′ is not necessarily unique.
Bordewich and Semple [5] established the following
characterization which directly relates the rSPR distance
to the number of elements in a maximum-agreement
forest and is crucial to many algorithms that exactly
compute the rSPR distance between two rooted binary
phylogenetic trees.
Theorem 1. Let  and  ′ be two rooted binary phylogenetic X-trees, and let {  ,  1 ,  2 ,...,  k} be a maximum-agreement forest for  and  ′ . Then
d rSPR ( ,  ′) = k.

Rooted Subtree Prune and Regraft

Clusters

Let  be a rooted binary phylogenetic X-trees. For the
purposes of the upcoming definition, we view the root
of  as a vertex r adjoined to the original root by a
pendant edge. Now, let e = {u, v} be any edge of  that
is not incident with r such that u is the vertex on the
path from r to v . Let  ′ be the rooted binary phylogenetic X-tree obtained from  by deleting e and reattaching the resulting subtree with root v via a new edge,
say f , as follows. Subdivide an edge of the component
that contains r with a new vertex u′, join u′ and v with
f, and contract u. Then  ′ has been obtained from 

Let  be a rooted binary phylogenetic X-tree, and let A
be a subset of X with |A| ≥ 2. We say that A is a cluster
of  if there is a vertex v in  whose set of descendants is precisely A. We denote this cluster by  (v) .
We next consider several different types of clusters that
will play an important role in the remainder of this paper.
Let  and  ′ be two rooted binary phylogenetic Xtrees, and let A be a cluster that is common to  and
 ′ ; that is there exists a vertex v in  and a vertex v′
in  ′ such that  (v) =  ′(v′) . Furthermore, let u
(resp. u′) be the parent vertex of v (resp. v′ ) in  (resp.

Linz BMC Evolutionary Biology 2010, 10:334
http://www.biomedcentral.com/1471-2148/10/334

Page 3 of 6

w ≠ v ), and let w (resp. w′) be the child vertex of u (resp.
u′) with w ≠ v (resp. w′ ≠ v′ ). If no proper subset of A is
a common cluster of  and  ′ , we refer to A as a minimal cluster. Moreover, A is a solvable cluster if A is minimal and  (u) =  ′(u′) . Lastly, we say that A is a
subtree-like cluster if A is a solvable cluster and
 | (w) ≅  ′| ′(w′) . Roughly speaking, the condition
 | (w) ≅  ′| ′(w′) is satisfied if the subtree with root
w in  is identical to the subtree with root w′ in  ′ .
We refer to  | (w) as the common subtree associated
with A and note that it can exclusively consist of an isolated vertex. For example, A = {1, 2, ..., 6} is a solvable
cluster of the two rooted binary phylogenetic X-trees 
and  ′ that are shown in Figure 1 since  (u) =  ′(u′)
=
{1,
2,
...,
12}.
However,
as
 | (7, 8, … , 12) ≅  ′ | (7, 8, … , 12) , it follows that A is
/
not a subtree-like cluster of  and  ′ .
Now, let Θ Î {minimal, solvable, subtree-like}. We
next describe algorithmically how to obtain a sequence
of tree pairs–which is important to mathematically state
Hill et al’s conjecture–by decomposing two rooted binary phylogenetic X-trees  and  ′ into smaller subtrees. As previously, view the roots of  and  ′ as a
vertex r adjoined to the original root by a pendant edge,
and regard r as part of the label set; that is
( ) = X ∪ {} . Setting i to be 1, let Ai be a common
Θ cluster of  and  ′ with | ( ) | − | A i |> 1 . Let  i
denote the rooted binary phylogenetic tree  | A i
(viewing the root of  i as a vertex r i adjoined to the
original root by a pendant edge) and reset  to be the
tree obtained from  by replacing  ( A i ) with a new
vertex ai . Analogously, let  i′ denote the rooted binary
phylogenetic tree  ′ | A i (viewing the root of  i′ as a
vertex r i adjoined to the original root by a pendant
edge) and reset  ′ to be the tree obtained from  ′ by
replacing  ′( A i ) with a new vertex ai . If  and  ′

Figure 1 Two rooted binary phylogenetic X-trees
root by a pendant edge.

contain a Θ cluster Ai+1 with | ( ) | − | A i +1 | >1 , stop
or increment i by 1 and repeat this process; otherwise,
stop. Eventually, we obtain a sequence
′
( 1 ,  1′),...,( t ,  t′),(  ,   )

of pairs of rooted binary phylogenetic trees, where  
′
and   denote the two trees after the replacement of
 ( A t ) and  ′( A t ) with a vertex a t . We call this
sequence a cluster sequence of  and  ′ with respect
to a specific cluster type Θ. An example of a cluster
sequence with respect to Θ = solvable for the two
rooted binary phylogenetic trees depicted in Figure 1 is
shown in Figure 2.

Hill et al’s Conjecture and a Counterexample
We begin this section by formally stating Hill et al’s
conjecture which was introduced in [1].
Conjecture 2. Let  and  ′ be two rooted binary
′
phylogenetic X-trees. Let ( 1 ,  1′),...,( t ,  t′),(  ,   ) be
a cluster sequence for  and  ′ with respect to Θ = solvable. Then
t

d rSPR ( ,  ′) =

∑d

rSPR ( i ,  i′) +

′
d rSPR (  ,   ).

(1)

i =1

Next, we detail a counterexample to the above conjecture which is based on the two rooted binary phylogenetic X-trees  and  ′ that are shown in Figure 1. A
maximum-agreement forest  for  and  ′ contains
5 elements and is shown in the top of Figure 3. By Theorem 1, this implies that d rSPR ( ,  ′) = 4 . Now, consider the cluster sequence with respect to Θ = solvable
for  and  ′ that contains three tree pairs and is
depicted in Figure 2. The first tree pair (  1 ,  1′ ) consists

 and  ′. Note that  and  ′ have an additional vertex r adjoined to the original

Linz BMC Evolutionary Biology 2010, 10:334
http://www.biomedcentral.com/1471-2148/10/334

Page 4 of 6

Figure 2 A cluster sequence with respect to Θ = solvable for the two rooted binary phylogenetic X-trees
Figure 1. Details on how the tree pairs have been obtained are given in the text.

of the restricted subtrees of  and  ′ whose leaf set is
the solvable cluster A1 = {1, 2, ..., 6} of  and  ′ ; thus
 1 =  | ( A1 ∪ {1}) and  1′ =  ′ | ( A1 ∪ {1}) . Simi′
larly, the second tree pair (  2 ,  2 ) consists of the
restricted subtrees of the two trees that have been

 and  ′ shown in

obtained from  and  ′ by replacing  ( A1) and
 ′( A1) , respectively, with a single leaf a1 whose leaf set
is the solvable cluster A2 = {7, 8, ..., 12}. Lastly, the third
′
tree pair (   ,   ) can be regarded as being obtained
from  and  ′ by replacing  ( A1) and  ′( A1) with

Figure 3 Maximum-agreement forests. Top: A maximum-agreement forest
agreement forest i for each tree pair  i and  i′ shown in Figure 2.

 for  and  ′ depicted in Figure 1. Bottom: A maximum-

Linz BMC Evolutionary Biology 2010, 10:334
http://www.biomedcentral.com/1471-2148/10/334

Page 5 of 6

a leaf a1 and replacing  ( A 2 ) and  ′( A 2 ) with a leaf
a2. For each tree pair (  i ,  i′ ) of the cluster sequence
shown in Figure 2, a maximum-agreement forest i
with i Î {1, 2, r} is depicted in the bottom part of Figure 3. Note that each forest i is the unique maximum-agreement forest for  i and  i′ Now, by
Equation 1, we have
′
′
d rSPR ( 1 ,  1′) + d rSPR ( 2 ,  2 ) + d rSPR (  ,   ) = 2 + 2 + 1 = 5

which is strictly greater than d rSPR ( ,  ′) ; thus showing that Conjecture 2 does not hold.

Using Subtree-Like Clusters to Prove Hill et al’s
Conjecture
In this section, we show that Conjecture 2 holds, if we
consider a subtree-like cluster instead of a solvable cluster in each iteration of computing a cluster sequence for
two rooted binary phylogenetic trees. We first prove the
result for a cluster sequence of size two and then see that
this result generalizes to cluster sequences of greater size.
Lemma 3. Let  and  ′ be two rooted binary phyloge′
netic X-trees. Let (  1 ,  1′ ), (   ,   ) be a cluster sequence
for  and  ′ with respect to Θ = subtree-like. Then
′
d rSPR (  ,  ′ ) = d rSPR (  1 ,  1′ ) + d rSPR (  ,   ).

is an agreement forest for  and  ′ . As a1 - {a1}
always
contains
an
element,
note
that
(1 − {1}) ∪ (a1 − {a1}) is never the empty set.
Thus |  | =| 1 | + |  | −1 and, by Theorem 1, we have
′
d rSPR ( 1 ,  1) + d rSPR (  ,   ) =| 1 | −1+ |  | −1 =|  | −1 ≥ d rSPR ( ,  ′).

This establishes Equation 2.
We now turn to the second part of this proof and
show that
′
d rSPR ( ,  ′) ≥ d rSPR ( 1 ,  1′) + d rSPR ( ρ ,   ).

(3)

Let  be a maximum-agreement forest for 
and  ′ . The remainder of this part splits into
two cases. First, assume that there exists an element
in  , say m , such that m ∩ A1 ≠ ∅ and
m ∩ ( X − A1) ∪ {} ≠ ∅ . Note that m is the only
label set with the described properties, as otherwise, 
is not an agreement forest for  and  ′ .
Let
and
let
m′ = (m ∩ A1) ∪ {1} ,
m ’’ = (m ∩ (( X − A1) ∪ {})) ∪ {a1} . Since  is an
agreement forest for  and  ′ ,
1 = { ∈  :  ⊆ A1} ∪ {m′}

Proof. Let A1 be the subtree-like cluster ( 1) − {1}
of  and  ′ . We start by making an observation that
is crucial for what follows. By the definition of a subtree-like cluster, there exists a common subtree, say  ,
that is associated with A1 in  and  ′ . Clearly,  is
′
also a common subtree of   and   . Furthermore, as
  has been obtained from  by replacing  ( A1)
′
with a single vertex a 1 and as   has been obtained
′( A1) with a single vertex a1, it
from  ′ by replacing 
is easily checked that  |( ( ) ∪ {a1} ) is a common
′
subtree of   and   .
We now show that
′
d rSPR (  ,  ′ ) ≤ d rSPR (   ,  1′ ) + d rSPR (  ,   ).

 = (1 ∪  − {1 , a1 }) ∪ {(1 − {1}) ∪ (a1 − {a1})}

(2)

Let 1 be a maximum-agreement forest for  1 and
 1′ , and let  be a maximum-agreement forest for
′
  and   . By the observation prior to this paragraph,
it follows from Proposition 3.2 of [5] that ( ) ∪ {a1}
is a subset of an element, say a1 , in  . Furthermore,
let 1 be the label set of 1 with r1 Î 1 . As 1 is
an agreement forest for  1 and  1′ and as  is such
′
a forest for   and   , it follows that

is such a forest for  1 and  1′ and
 = { ∈  :  ⊆ (( X − A1) ∪ {})} ∪ {m ’’}
′
is an agreement forest for   and   . Second, assume

that no such element m exists. Hence, every element 
in  is either a subset of A 1 or a subset of
( X − A1) ∪ {} . Furthermore, as A1 is a subtree-like cluster of  and  ′ whose associated common subtree is
 , it again follows from Proposition 3.2 of [5], that ( )
is a subset of an element, say  , in  . Now, as  is an
agreement forest for  and  ′ , it follows that
1 = { ∈  :  ⊆ A1} ∪ {{1}}

is an agreement forest for  1 and  1′ and
 = ({ ∈  :  ⊆ (( X − A1) ∪ {})} − {S}) ∪ {S ∪ {a1}}

′
is such a forest for   and   . Regardless of

exists,
whether
or
not
m
|  | =| 1 | + |  | −1 , and therefore,

we

have

′
d rSPR (  ,  ′ ) =|  | −1 =| 1 | + |  | −2 ≥ d rSPR ( 1 ,  1′) + d rSPR (  ,   ).

Linz BMC Evolutionary Biology 2010, 10:334
http://www.biomedcentral.com/1471-2148/10/334

This establishes Equation 3, and combining Equations
2 and 3 completes the proof of this lemma.■
The next theorem directly follows from repeated
applications of Lemma 3.
Theorem 4. Let  and  ′ be two rooted binary phyloge′
netic X-trees. Let ( 1 ,  1′),...,( t ,  t′),(  ,   ) be a cluster

sequence for  and  ′ with respect to Θ = subtree-like. Then
t

d rSPR ( ,  ′) =

∑d

rSPR ( i ,  i′) +

′
d rSPR (  ,   ).

i =1

Conclusion
In this paper, we have shown that Hill et al’s conjecture [1]
and the underlying divide-and-conquer approach cannot
be used to calculate the rSPR distance between two phylogenies exactly. To provide some intuition why this conjecture
fails,
consider
the
following.
Let
′
( 1 ,  1′),...,( t ,  t′),(  ,   ) be a cluster sequence with
respect to Θ = solvable for two rooted binary phylogenetic
trees  and  ′ . Calculating a maximum-agreement forest for each tree pair (  i ,  i′ ), taking their union, and, for
each i Î; {1, 2, ..., t}, joining the element containing ai with
the element containing ri can potentially result in a set,
say  , which contains an element that is a subset of {a1,
a2, ..., at , r1, r2, ..., rt}. In the case of our counterexample,
 = {{1, 2, 3},{4, 5, 6},{7, 8, 9},{10, 11, 12},{13, 14, 15, },{a1 , a 2 , 1 ,  2}}

contains one such element. Trivially, this element is not
part of any agreement forest for  and  ′ while  {{a1, a2, r1, r2}} is precisely a maximum-agreement forest
for  and  ′ . Consequently, a divide-and-conquer
approach that exactly calculates d rSPR ( ,  ′) needs to
take into account the number of elements in  that are
subsets of {a 1 , a 2 , ..., a t , r 1 , r 2 , ..., r t }; otherwise, the
result may be an overestimate of the exact solution.
Alternatively, one can approach the problem by finding a
strategy which guarantees that no element in  is a subset of {a1, a2, ..., at , r1, r2, ..., rt }. This is the underlying
idea of Theorem 4 which uses a slightly more restricted
version of Hill et al’s conjecture and finally gives the
desired outcome. Hence, decomposing  and  ′ into a
cluster sequence with respect to Θ = subtree-like can be
used to speed up the exact calculation of d rSPR ( ,  ′) .
However, for practical problem instances, it may be
unlikely to find many subtree-like clusters. For example,
the two phylogenies shown in Figure 1 do not have any
common subtree-like cluster. This is due to the
restricted definition of such a cluster which requires

Page 6 of 6

that a vertex whose set of descendants is a common
cluster of two rooted binary phylogenetic X-trees 
and  ′ has the same parent vertex than a common
subtree of  and  ′ . To lessen this problem, an alternative approach–that has recently been published by
Linz and Semple [6]–can be applied. This paper
describes a more general divide-and-conquer approach
that exactly computes the rSPR distance between 
and
for
when
a
cluster
sequence
′
′
( 1 ,  1′),...,( t ,  t′),(  ,   ) with respect to Θ = minimal for  and  ′ is given. Loosely speaking, the
authors calculate a so-called minimum-weight partition
 of X ∪ {r} ∪ {a1, a2, ..., at , r1, r2, ..., rt} such that 
contains an agreement forest (not necessarily a maximum-agreement forest) for each tree pair (  i ,  i′ ). To
compute  , it has been shown that applying a ‘bottomup’ approach which locally works on subtrees of each
tree pair (  i ,  i′ ) guarantees that the number of elements in  that are subsets of {a1, a2, ..., at , r1, r2, ...,
rt} is maximized while |  | is minimized.
Acknowledgements
I thank Maria Luisa Bonet, Mareike Fischer, and Charles Semple for useful
discussions and comments on an earlier version of this paper. Financial
support from MEC (TIN2007-68005-C04-03) is gratefully acknowledged.
Response
By Helgi B Schiöth
E-Mail: helgis@bmc.uu.se
Address: Department of Neuroscience, Functional Pharmacology, Uppsala
University, BMC, Box 593, 751 24, Uppsala, Sweden
“We have found that the manuscript by Linz is correct and to the point. We
have therefore updated the SPRIT software and published the new version
online.
The new version supports both the old incorrect conjecture as well as the
new correct one to allow for comparisons to be made.”
Received: 21 June 2010 Accepted: 29 October 2010
Published: 29 October 2010
References
1. Hill T, Nordström KJV, Thollesson M, Säfström TM, Vernersson AKE,
Fredriksson R, Schiöth HB: SPRIT: Identifying horizontal gene transfer in
rooted phylogenetic trees. BMC Evol Biol 2010, 10:42.
2. Hein J, Jing T, Wang L, Zhang K: On the complexity of comparing
evolutionary trees. Discrete Appl Math 1996, 71:153-169.
3. Baroni M, Grünewald S, Moulton V, Semple C: Bounding the number of
hybridization events for a consistent evolutionary history. J Math Biol
2005, 51:171-182.
4. Semple C, Steel M: Phylogenetics Oxford University Press; 2003.
5. Bordewich M, Semple C: On the computational complexity of the
rooted subtree prune and regraft distance. Ann Comb 2004, 8:
409-423.
6. Linz S, Semple C: A cluster reduction for computing the subtree distance
between phylogenies. Ann Comb, in press.
doi:10.1186/1471-2148-10-334
Cite this article as: Linz: On Hill et al’s conjecture for calculating the
subtree prune and regraft distance between phylogenies. BMC
Evolutionary Biology 2010 10:334.

</pre>
</body>
</html>
