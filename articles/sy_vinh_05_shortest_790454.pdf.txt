<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>1471-2105-6-92.fm</title>
<meta name="Author" content="csproduction"/>
<meta name="Creator" content="FrameMaker 7.0"/>
<meta name="Producer" content="Acrobat Distiller 5.0.5 (Windows)"/>
<meta name="CreationDate" content=""/>
</head>
<body>
<pre>
BMC Bioinformatics

BioMed Central

Open Access

Research article

Shortest triplet clustering: reconstructing large phylogenies using
representative sets
Le Sy Vinh2 and Arndt von Haeseler*1,2
Address: 1Heinrich-Heine-Universität Düsseldorf, WE Informatik, Universitätstr. 1, D-040225 Düsseldorf, Germany and 2Forschungszentrum
Jülich, Germany
Email: Le Sy Vinh - vinh@cs.uni-duesseldorf.de; Arndt von Haeseler* - haeseler@cs.uni-duesseldorf.de
* Corresponding author

Published: 08 April 2005
BMC Bioinformatics 2005, 6:92

doi:10.1186/1471-2105-6-92

Received: 29 November 2004
Accepted: 08 April 2005

This article is available from: http://www.biomedcentral.com/1471-2105/6/92
© 2005 Sy Vinh and von Haeseler; licensee BioMed Central Ltd.
This is an Open Access article distributed under the terms of the Creative Commons Attribution License (http://creativecommons.org/licenses/by/2.0),
which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.

Abstract
Background: Understanding the evolutionary relationships among species based on their genetic
information is one of the primary objectives in phylogenetic analysis. Reconstructing phylogenies
for large data sets is still a challenging task in Bioinformatics.
Results: We propose a new distance-based clustering method, the shortest triplet clustering
algorithm (STC), to reconstruct phylogenies. The main idea is the introduction of a natural definition
of so-called k-representative sets. Based on k-representative sets, shortest triplets are reconstructed
and serve as building blocks for the STC algorithm to agglomerate sequences for tree
reconstruction in O(n2) time for n sequences.
Simulations show that STC gives better topological accuracy than other tested methods that also
build a first starting tree. STC appears as a very good method to start the tree reconstruction.
However, all tested methods give similar results if balanced nearest neighbor interchange (BNNI)
is applied as a post-processing step. BNNI leads to an improvement in all instances. The program
is available at http://www.bi.uni-duesseldorf.de/software/stc/.
Conclusion: The results demonstrate that the new approach efficiently reconstructs phylogenies
for large data sets. We found that BNNI boosts the topological accuracy of all methods including
STC, therefore, one should use BNNI as a post-processing step to get better topological accuracy.

Background
Reconstructing the evolutionary relationships among species based on their genetic information is one of the primary objectives in phylogenetic analysis. In recent years,
numerous heuristics to reconstruct phylogenies for large
data sets have been proposed [1-11]. In addition, parallel
tree-reconstruction programs have been implemented
[12-15].

To date, distance-based methods introduced by CavalliSforza and Edwards [16] and by Fitch and Margoliash [17]
appear most appropriate to reconstruct phylogenies based
on thousands of sequences. These methods are a compromise between computational speed and topological accuracy [1,3,5-7] and run typically in O(n3) time for n
sequences [1,3,5] or in O(n2) for recently suggested
approaches [6,7]. Clustering algorithms form a major
class of distance-based methods [18]. They do not have an
explicit objective function that needs to be optimized.

Page 1 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

They rather group sequences (or taxa) iteratively to reconstruct a distance-based phylogenetic tree. UPGMA is a
popular method to infer phylogenies with the constraint
that a molecular clock is imposed on the evolutionary
process. Other clustering approaches have been proposed
to relax the molecular clock assumption [1,3,5,19-21].
An attempt to boost the accuracy and to reduce the computational burden is the introduction of k-representative
set concepts [10,11]. k-representative sets consist of at
most k elements but retain the most important information from whole sets. In this paper, we extend our original
approach [10] by introducing a more natural k-representative set concept. In a nutshell, representative sets are
regarded as components to construct shortest triplets,
each of which comprises three closely related sequences
from three k-representative sets. The collection of shortest
triplets serves as building block for a new distance-based
clustering method called shortest triplet clustering algorithm (STC).

Results
Simulations were run on a PC cluster with 16 nodes. Each
node has two 1.8 GHz processors and 2 GB RAM. Seq-Gen
[22] was used to evolve sequences along trees using the
Kimura two-parameter model [23] with a transition/
transversion ratio of 2.0. We generated 100 simulated data
sets of 500 sequences each with sequence lengths 500,
1000 and 2000 nucleotides (nt), respectively. As one
model tree, we used the rbcl gene tree with diameter 0.36
substitutions per site as inferred from an alignment of 500
rbcl-genes [10]. We call this the rbcl-simulation.
In a second experiment, the so-called large simulation, tree
topologies were drawn from the Yule-Harding distribution [24], and edge lengths were drawn from an exponential distribution and subsequently rescaled such that the
mean diameter of the tree was either 0.1, 0.5, 1.0, or 1.5.
For each value of the diameter we generated 100 trees with
1000 sequences and 100 trees with 5000 sequences. Thus,
a total of 800 trees were used.
Finally, we tested the accuracy and runtime of the STC and
compared it with six other commonly used distance-based
methods. More specifically, we investigate the performance of the Neighbor-Joining method (NJ) [1] implemented in PAUP* 4.0 [25], BIONJ [3], Weighbor 1.2 [5],
Harmony Greedy Triplet and Four Point Condition
(HGT/FP) [7] as well as Greedy Minimum Evolution
(GME) and Balanced Minimum Evolution (BME) [6].
Unfortunately, no distance-based program is available for
the disc-covering method [4]. All methods were combined with DNADIST version 3.5 [26] and pairwise distances were corrected for multiple hits according to the
model used in the simulation. Moreover, we examined

http://www.biomedcentral.com/1471-2105/6/92

the performance of all methods when the balanced nearest neighbor interchange (BNNI) [6] is used as a postprocessing step.
Further, to illustrate the performance of STC we re-analyzed the 96-taxon alignments of sequence length 500 nt,
that were analyzed in [6] and available at http://
www.lirmm.fr/~guindon/simul/. The 6000 trees were
split into three groups called "slow" (0.2 substitutions per
site), "moderate" (0.4 substitutions per site) and "fast"
(1.0 substitutions per site). We call this the re-analyzed
simulation.
The accuracy of a tree reconstruction method for a simulated data set is measured by the Robinson and Foulds
(RF) distance [27] between the inferred tree and the
model tree used to generate the data set. The RF distance
between two trees is the number of bi-partitions present
in one of the two trees but not the other, divided by the
number of possible bi-partitions. Thus, the smaller the RF
distance between two trees the closer are their topologies.
In other words, the smaller the RF distance is between the
inferred tree and the model tree the higher is the topological accuracy of the tree reconstruction method.
In the following we discuss the results of the rbcl-simulation, and the large simulation and the re-analyzed simulation.
rbcl-simulation
Table 1 shows that the STC outperforms all other methods
analyzed in terms of topologlcal accuracy. For instance,
the RF distance between the STC-tree and the model tree
is on average 0.177 (with respect to the sequence length of
500 nt) and better than NJ (0.190), slightly better than the
second best method BME (0.184) and much better than
HGT/FP (0.512). Table 1 also demonstrates that all tested
methods including STC give higher topologlcal accuracy
when the sequence length is increased. However, Table 2
shows that other methods in combination with BNNI outperform STC without BNNI. The combination of STC and
BNNI shows similar performance as the combinations of
NJ (BIONJ, Weighbor) and BNNI and, slightly better
results than the combination of GME (HGT/FP) and
BNNI.
Large simulation
Due to the increase in runtime, Weighbor could not be
tested. Table 3 and 4 show that STC gives better results
than the other methods independent of the diameter. All
methods display a decrease in accuracy when the number
of sequences changes from 1000 to 5000. As shown in
Table 5 and 6, BNNI boosts the accuracy of all methods
including STC. All methods give similar results when
being used together with BNNI.

Page 2 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

Table 1: The average Robinson and Foulds distance of 100 simulated data sets of 500 sequences each with sequence lengths 500, 1000
and 2000 nt (rbcl simulation). Methods are used without BNNI.

sequence length
500
1000
2000

NJ

BIONJ

Weighbor

HGT/FP

GME

BME

STCk = 5

.190
.100
.049

.188
.098
.048

.194
.099
.050

.512
.409
.313

.240
.144
.082

.184
.096
.046

.177
.088
.040

Table 2: The average Robinson and Foulds distance of 100 simulated data sets of 500 sequences each with sequence lengths 500, 1000
and 2000 nt (rbcl simulation). Methods are used with BNNI.

sequence length
500
1000
2000

NJ

BIONJ

Weighbor

HGT/FP

GME

BME

STCk = 5

.162
.079
.035

.162
.079
.035

.162
.079
.035

.166
.079
.036

.163
.080
.036

.163
.079
.035

.162
.079
.035

Table 3: The average Robinson and Foulds distance of 100 simulated data sets of 1000 taxa for each tree diameter 0.1, 0.5, 1.0 and 1.5
and with sequence length 1000 nt (large simulation). Methods are used without BNNI.

number sequences
1000 (0.1)
1000 (0.5)
1000 (1.0)
1000 (1.5)

NJ

BIONJ

HGT/FP

GME

BME

STCk = 5

.146
.093
.094
.097

.146
.089
.090
.091

.378
.193
.188
.182

.168
.126
.132
.138

.143
.075
.074
.073

.139
.066
.062
.061

Table 4: The average Robinson and Foulds distance of 100 data sets of 5000 taxa for each tree diameter 0.1, 0.5, 1.0 and 1.5 and with
sequence length 1000 nt (large simulation). Methods are used without BNNI.

number sequences
5000 (0.1)
5000 (0.5)
5000 (1.0)
5000 (1.5)

NJ

BIONJ

HGT/FP

GME

BME

STCk = 5

.178
.109
.107
.112

.179
.105
.102
.106

.442
.210
.192
.188

.207
.156
.155
.164

.173
.084
.073
.072

.170
.072
.064
.063

Re-analyzed simulation
Except for STC, the accuracies for the other methods displayed in Table 7 and 8 were taken from [6]. Table 7
shows that STC outperforms the other methods in terms
of topological accuracy with the exception that Weighbor
is slightly better than STC with respect to the slow simulation group. If BNNI is applied, all methods exhibit an
almost identical performance (see Table 8).

Another look at the performance
Instead of looking at the average RF distance, we suggest
to take a closer look at the simulated data. For each simulated data set, that is subjected to the STC and six other
tree reconstruction methods mentioned above, we compute the RF distance between the reconstructed tree and
the model tree for all methods. Figure 1 illustrates the
results for the large simulation when comparing STC with

Page 3 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

Table 5: The average Robinson and Foulds distance of 100 simulated data sets of 1000 taxa for each tree diameter 0.1, 0.5, 1.0 and 1.5
and with sequence length 1000 nt (large simulation). Methods are used with BNNI.

NJ

BIONJ

HGT/FP

GME

BME

STCk = 5

.137
.061
.057
.055

.137
.061
.057
.055

.137
.061
.057
.055

.137
.061
.057
.055

.137
.061
.057
.055

.138
.061
.056
.055

number sequences
1000 (0.1)
1000 (0.5)
1000 (1.0)
1000 (1.5)

Table 6: The average Robinson and Foulds distance of 100 data sets of 5000 taxa for each tree diameter 0.1, 0.5, 1.0 and 1.5 and with
sequence length 1000 nt (large simulation). Methods are used with BNNI.

NJ

BIONJ

HGT/FP

GME

BME

STCk = 5

.168
.066
.057
.055

.168
.066
.057
.055

.168
.066
.057
.055

.168
.066
.057
.055

.168
.066
.057
.055

.168
.066
.057
.055

number sequences
5000 (0.1)
5000 (0.5)
5000 (1.0)
5000 (1.5)

Table 7: The average RF distance of the 96-taxon alignments of sequence length 500 nt, that were analyzed in [6]. The 6000 trees were
split into three groups called "slow" (0.2 substitutions per site), "moderate" (0.4 substitutions per site) and "fast" (1.0 substitutions per
site). Except for STC, the accuracies for the other methods were taken from [6]. Methods are used without BNNI.

number
sequences
96 (slow)
96 (moderate)
96 (fast)

NJ

BIONJ

Weighbor

HGT/FP

GME

BME

STCk = 5

.183
.136
.115

.180
.134
.112

.178
.129
.103

.512
.480
.465

.199
.158
.144

.186
.137
.117

.179
.125
.102

Table 8: The average RF distance of the 96-taxon alignments of sequence length 500 nt, that were analyzed in [6]. The 6000 trees were
split into three groups called "slow" (0.2 substitutions per site), "moderate" (0.4 substitutions per site) and "fast" (1.0 substitutions per
site). Except for STC, the accuracies for the other methods were taken from [6]. Methods are used with BNNI.

number
sequences
96 (slow)
96 (moderate)
96 (fast)

NJ

BIONJ

Weighbor

HGT/FP

GME

BME

STCk = 5

.173
.119
.090

.173
.118
.090

.173
.118
.091

.175
.123
.098

.173
.118
.091

.173
.118
.090

.173
.116
.090

NJ (left column) and STC with the second best method
BME (right column). In each diagram specified by the
number of taxa and reconstruction methods, 400 points
are displayed, that resulted from 100 simulations for each
of the tree-diameters (0.1, 0.5, 1.0 and 1.5). Although four
tree-diameters were studied only two clouds of points are
discernible, where the cloud in the north-east corner of

each diagram represents the simulations with the treediameter 0.1. The remaining 300 points gather in the
south-west cloud because the RF-distances from trees with
diameter 0.5, 1.0, 1.5 are not substantially different from
each other (see Table 3 and 4). More precisely, the horizontal and vertical axes indicate the RF distances of STC
and NJ (or BME), respectively. Each point in the graph

Page 4 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

0.2
RF of BME

RF of NJ

0.2

0.1

1000 nt
0

0

0.1
RF of STC

0

0.1
RF of STC

0.2

(b) STC versus BME (1000 taxa)
0.2
RF of BME

0.2

RF of NJ

1000 nt
0

0.2

(a) STC versus NJ (1000 taxa)

0.1

1000 nt
0

0.1

0

0.1
RF of STC

0.2

(c) STC versus NJ (5000 taxa)

0.1

1000 nt
0

0

0.1
RF of STC

0.2

(d) STC versus BME (5000 taxa)

The comparisons of topological accuracy between STC, NJ and BME for the large simulation
Figure 1
The comparisons of topological accuracy between STC, NJ and BME for the large simulation. Each point in the graph presents
the Robinson and Foulds (RF) distance for a simulated data set. Points above the dotted line are examples where the RF distance of the STC-tree is less than the RF distance of the NJ-tree or BME-tree. Thus, the STC gives higher topological accuracy
than NJ or BME with respect to the simulated data set.

presents the RF distance for a simulated data set. Points
above the dotted line are examples where the RF distance
of the STC-tree is less than the RF distance of the NJ-tree
or BME-tree. Thus, the STC gives higher topological accuracy than NJ or BME with respect to the simulated data set.
For example, Figure 1a illustrates the comparison between
STC and NJ with respect to 1000 taxa data sets. 379 out of
400 points are above the diagonal, thus, STC gives better
results than NJ in about 95% of the simulations. For the
remaining 21 alignments (points), two methods showed
the same RF distance. Finally, we found 19 points below
the diagonal in which case NJ outperforms STC. For the
large simulation (5000 taxa), NJ is worse than STC in all
cases. However, the second best method BME is better

than STC in 11% and 5% of the cases with respect to 1000
and 5000 sequence data sets.
Figure 2 shows the same analysis for the rbcl simulation.
It shows that with increasing sequence length the cloud of
points moves towards zero. From Figure 2 we learn that in
some instances NJ (or BME) performs better (with regard
to the RF distance) than STC, i.e. 20%, 12%, 8% (or 34%,
17%, 14%) of the simulations for sequence lengths 500,
1000 and 2000 nt, respectively.
Similar results hold for the other methods. These results
are summarized in Table 9 where we show the percentage
of simulations in which STC is at least as good as the other
methods.

Page 5 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

0.3
RF of BME

RF of NJ

0.3
0.2

500 nt
0.1
0

1000 nt
2000 nt
0

0.1
0.2
RF of STC

0.2

500 nt
0.1
0

0.3

(a) STC versus NJ (500 sequences)

1000 nt
2000 nt
0

0.1
0.2
RF of STC

0.3

(a) STC versus BME (500 sequences)

The comparisons of topological accuracy between STC, NJ and BME for the rbcl simulation
Figure 2
The comparisons of topological accuracy between STC, NJ and BME for the rbcl simulation. Each point in the graph presents the
Robinson and Foulds (RF) distance for a simulated data set. Points above the dotted line are examples where the RF distance of
the STC-tree is less than the RF distance of the NJ-tree or BME-tree. Thus, the STC gives higher topological accuracy than NJ
or BME with respect to the simulated data set.

Table 9: The percentage of cases where STC is at least as good as other tested methods in terms of RF distance. The number in
parentheses is the percentage of cases where STC is equally good as other tested methods. Methods are used without BNNI.

number sequences
96 (500 nt)
500 (500 nt)
500 (1000 nt)
500 (2000 nt)
1000 (1000 nt)
5000 (1000 nt)

NJ

BIONJ

Weighbor

HGT/FP

GME

BME

68 (16)
80 (4)
88 (3)
92 (6)
95 (2)
100 (0)

65 (15)
76 (4)
79 (4)
90 (4)
95 (1)
99 (0)

57 (16)
88 (3)
84 (4)
92 (3)
n.d.
n.d.

100 (0)
100 (0)
100 (0)
100 (0)
100 (0)
100 (0)

73 (10)
100 (0)
100 (0)
100 (0)
100 (0)
100 (0)

70 (14)
66 (1)
83 (6)
86 (9)
89 (15)
95 (1)

Table 10: The percentage of cases where STC is better than other tested methods in terms of RF distance. The number in parentheses
is the percentage of cases where STC is worse than other tested methods. Methods are used with BNNI.

number sequences
96 (500 nt)
500 (500 nt)
500 (1000 nt)
500 (2000 nt)
1000 (1000 nt)
5000 (1000 nt)

NJ

BIONJ

Weighbor

HGT/FP

GME

BME

9 (8)
34 (37)
22 (19)
10 (13)
30 (28)
48 (40)

8 (8)
35 (39)
17 (23)
8 (7)
27 (29)
42 (44)

10 (10)
35 (36)
18 (22)
10 (8)
n.d.
n.d.

12 (10)
59 (29)
23 (28)
9 (8)
28 (22)
45 (45)

10 (8)
46 (33)
30 (20)
12 (10)
30 (24)
52 (37)

10 (9)
41 (39)
24 (20)
7 (10)
28 (27)
43 (43)

Page 6 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

Again, if BNNI is applied we observe that no substantial
difference among the various approaches. The accuracy of
the methods is mostly determined by BNNI (see Table
10).

Additive distances
Let S = {s1, s2,..., sn} be a set of n objects (typically contemporary sequences/taxa), let D = D(uv) be a distance matrix
where D(uv) is the distance between two objects u and v.

Conclusion

Definition 1
The distance matrix D is additive if and only if it satisfies the
four-point condition [28]: for any quartet {u, v, w, x},

We are presenting k-representative sets which allow us to
design a fast and accurate method to reconstruct phylogenies from large data sets with 1000 or more taxa. Simulations show that STC gives better results than other tested
methods in terms of topological accuracy. However, if
BNNI is introduced as a subsequent optimization step,
the differences in the performance disappear. All methods
show more or less the same accuracy. Thus, one should
apply BNNI to improve the topological accuracy.
The time to reconstruct a tree of up to 1000 sequences is
not really an issue for all tested distance-based methods,
with the exception of Weighbor. Weighbor needed about
19 minutes to reconstruct a tree with 500 sequences, thus
it is only applicable to data sets with up to some hundred
sequences. For data sets with up to 1000 sequences, the
remaining methods needed less than one minute to output a tree, thus the difference between methods in terms
of runtime is not significant. For data sets with 5000
sequences, STC (GME, HGT/FP or BME) with BNNI took
about 2.0 (2.5, 3.0 or 3.5) minutes to reconstruct a tree.
NJ (BIONJ) with BNNI were slower and consumed
approximately six minutes to output a tree. In short, the
combination of STC and BNNI efficiently reconstruct trees
for large data sets in both terms of topological accuracy
and runtime.
Finally, we did not systematically evaluate the impact of
the number of representatives k. We present some preliminary results for k = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40,
50, 60, 70, 80, 90 and 100. Figure 3 shows that the RF distance of STC decreases when k grows from 1 to 5. This
proves our intuition that a too small number of triplets
leads to an inaccurate estimate of path lengths and edge
lengths. When k ranges from 5 to 10, the RF distance
remains more or less unchanged. For k ≥ 10, the RF distance increases steadily indicating a loss of accuracy. The
decrease in accuracy is explained by the inclusion of triplets with large distances which include noise and disturb
the reconstruction. Thus, we chose k = 5 as a good compromise between the accuracy and computational complexity for all data sets. That is, the practical complexity of
the STC algorithm is only O(n2).

Methods
In this section we introduce a new clustering algorithm to
reconstruct phylogenies based on distance matrices.

D(uv) + D(wx) ≤ max{D(uw) + D(vx), D(ux) + D(vw)}.
In this case, the objects s ∈ S are related by a tree T = (V,
E) where V is the set of vertices such that S ⊂ V and E =
{{v1, v2}|v1, v2 ∈ V} is the set of edges. A vertex with one
adjacent edge is called a leaf, all other vertices are called
internal nodes. We let L ⊂ V be the leaf set of the tree T.
Note that we typically require L ⊆ S in the phylogenetic
setting.
If D is additive, then there exists a map ϕ : S # V and a
length function : E # R+ such that

D(uv) = ∑ e∈p(ϕ (u),ϕ (v)) (e) ≡ DT (ϕ (u),ϕ (v))
for all u, v ∈ S where p(φ (u), φ(v)) is the unique path connecting φ(u) and φ(v) in T and DT : V × V # R+ denotes the
distances between vertices in T (cf. [29]). ᐍ(e) is called
edge length of the edge e. To avoid unnecessary complication, we consider only one-to-one maps from S on the leaf
set L of T. If D is additive, the reconstruction of tree T and
ᐍ is trivial. If D is not additive, methods are available that
try to fit a tree T to D with respect to an objective function
(cf. [30]). Thus, in the following we consider arbitrary disˆ
tance matrices and we want to reconstruct a tree T
together with a length function ˆ .
Estimating edge lengths using triplets

We consider a subset X of S, then ϕ ( X ) : S # L induces a
map on a subtree of T such that the relationships of
objects in X are displayed by the subtree with leaf set φ(X).
The complement S0(X) = S - X we will call the unclassified
object set, because the relationships of objects in S0(X) to X
is not known from the subtree. Note that we will use S0
instead of S0(X) if X is clear from the context.
Let denote Tr = (Vr, Er) a rooted tree with root r and leaf set
Lr, and let Sr be a subset of S such that φ(Sr) = Lr. For convenience, we use Sr and Lr interchangeably.
Now, we consider the most simple edge length estimation
problem. That is, we would like to estimate the edge
lengths for a triplet tree {a, b, c} with distance matrix D
(see Figure 4a). Edge lengths are estimated as follows
Page 7 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

Robinson and Foulds distance

0.2

96 taxa data sets
500 taxa data sets
1000 taxa data sets
5000 taxa data sets

0.1

0

1

5

10

20

30

40
50
60
number representatives

70

80

90

100

Figure 3
The impact of the number of representatives k
The impact of the number of representatives k. The RF distance of STC decreases when k grows from 1 to 5. When k ranges
from 5 to 10, the RF distance remains more or less unchanged. For k ≥ 10, the RF distance increases steadily indicating a loss
of accuracy.

1
(ar | abc) = (D(ab) + D(ac) − D(bc))
2
1
(br | abc) = (D(ab) + D(bc) − D(ac))
2
1
(cr | abc) = (D(ac) + D(bc) − D(ab))
2

(1a)

= {S1 ∪ S2} where Sr ⊂ S and S0 = S - Sr is not represented
in Tr. Then we can compute
( s0r | s0 s1 s2 ) =

1
(D( s0 s1 ) + D( s0 s2 ) − D( s1 s2 ))
2

(2a)

( s1r | s0 s1 s2 ) =

1
(D( s0 s1 ) + D( s1 s2 ) − D( s0 s2 ))
2

(2b)

( s2r | s0 s1 s2 ) =

1
(D( s0 s2 ) + D( s1 s2 ) − D( s0 s1 ))
2

(2c)

(1b)

(1c)

Now consider a rooted Tr with the inferred tree-like metric

DTr . The rooted tree Tr consists of two rooted subtrees Tr1

for each triplet (s0, s1, s2) ∈ (S0 × S1 × S2).

and Tr2 (see Figure 4b). For convenience, we will use Ti

With DT1 (s1r1) and DT2 (s2r2) we denote the known dis-

instead of Tri if ri is clear from the context. The leaf set Sr

tances of s1 and s2 to their roots r1 and r2. Thus, we can

Page 8 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

S0

s0
a
r

l (ar|abc)
l (br|abc)

r

r
2

r1

l (cr|abc )

s1

c

b
(a)

s2

S1

S2

(b)

On the left, estimation of edge lengths ᐍ(ar|abc), ᐍ(br|abc) and ᐍ(cr|abc) of the triplet tree {a, b, c}
Figure 4
On the left, estimation of edge lengths ᐍ(ar|abc), ᐍ(br|abc) and ᐍ(cr|abc) of the triplet tree {a, b, c}. On the right, estimation of
path length ᐍ(s0r|s0s1s2) and edge lengths ᐍ(r1r|s0s1s2), ᐍ(r2r|s0s1s2) based on the triplet tree {s0, s1, s2}.

compute for each triplet {s0, s1, s2} the lengths ᐍ(r1r) and
ᐍ(r2r) as

(r1r | s0 s1 s2 ) = ( s1r | s0 s1 s2 ) − DT1 ( s1r1 )

(3a)

(r2r | s0 s1 s2 ) = ( s2r | s0 s1 s2 ) − DT2 ( s2r2 ).

(3b)

Note that, if D is additive and T1, T2 are isometric subtrees
of T, the lengths ᐍ(r1r) and ᐍ(r2r) do not depend on the
choice of the triplet {s0, s1, s2}.
Regardless of additivity considerations, we may define the
average length for a fixed s0 ∈ S0 as
( s0r | s0S1S2 ) ≡

1
∑ (s0r | s0 s1s2 )
| S1 || S2 | ( s ,s )∈S ×S
1 2
1 2

(4)

We can estimate edge lengths ᐍ(r1r) and ᐍ(r2r) by using all
possible triplets as
(r1r | S0S1S2 ) ≡

1
(r1r | s0 s1 s2 )
∑
| S0 || S1 || S2 | ( s ,s ,s )∈S ×S ×S
0 1 2
0 1 2

(5a)

(r2r | S0S1S2 ) ≡

1
| S0 || S1 || S2 | ( s

∑

0 ,s1 ,s2 )∈S0 ×S1×S2

(r2r | s0 s1 s2 )

(5b)

Recovering a tree from a distance matrix
The largest path length criterion
We want to reconstruct a tree T = (V, E) with respect to a
distance matrix D such that DT represents D. To this end,
we use triplets and the notation of a rooted tree Tr together
with Equations 4 and 5.

Our algorithm starts with the observation that if we take
an arbitrarily rooted tree Tm with m ∈ S and length function Tm , then there must be a pair of leaves (neighboring
leaves) that share an immediate most recent common
ancestor mrca which is farthest away from the root m with
respect to

Tm

. In Figure 5, the pair (3, 4) satisfies this

condition, we say this pair fulfills the largest path length criterion. The largest path length criterion easily generalizes
to arbitrarily rooted subtrees Ti and Tj of Tm, where all
descendants from the roots of Ti and Tj are in the vertex
sets Vi or Vj, respectively.

Page 9 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

5

med is called a median object.
Moreover, to reduce the computational complexity of
finding a pair of neighbors ( Ti0 , Tj0 ) using Equation 6,
we store for each Ti ∈   its potential neighbor Ti' ∈  
such that
Ti' = argmax{ᐍ(med, mrca|med, Si, Sj)|Tj ∈   }.

1

(8)

Now the neighboring pair ( Ti0 , Tj0 ) fulfilling the largest

2

path length criterion is determined as follows

4

3

Figure 5
The tree is rooted at leaf 5
The tree is rooted at leaf 5. In the tree, leaves 3 and 4 with
the largest path length from their most recent common
ancestor to the root 5 are neighbors.

( Ti0 , Tj0 ) = argmax{ᐍ(med, mrca|med, Si, Si')|Ti ∈   }.
(9)
In the following, we present a natural clustering algorithm
to reconstruct trees based on distance matrices and the
largest path length criterion
Clustering Algorithm
• Initial step: Find the median object med using Equation

7. Set   = {T1,..., Tn} - {Tmed}. Find for each Ti ∈   its
Let   be the set of rooted subtrees of Tm (each leaf l ∈
Lm is considered as a rooted subtree Tl). Now consider two
disjoint rooted subtrees Ti and Tj of Tm where i, j ∈ Vm.
Then the distance ᐍ(m, mrca|mSiSj) from the mrca of Ti and
Tj to m is computed according to Equation 4, where Si and
Sj are the leaf sets of Ti and Tj, respectively. Then we pick
( Ti0 , Tj0 ) = argmax{ᐍ(m, mrca|mSiSj) | Ti, Tj ∈   }

potential neighbor Ti' ∈   using Equation 8.
• Selection step (largest path length criterion): Find the
neighboring pair ( Ti0 , Tj0 ) using Equation 9.
• Agglomeration step: Combine Ti0 and Tj0 into a new
rooted tree T{i0 j0} with root i0j0, and estimate new edge

(6)

lengths of T{i0 j0} using Equation 5. Delete Ti0 and Tj0

as a pair of neighbors (if we detect more than one pair, we

and add T{i0 j0} to   . Find the potential neighbor for

randomly select one). By construction, ( Ti0 , Tj0 ) fulfills
the largest path length criterion.

the new rooted tree T{i0 j0} . using Equation 8, and replace

If D is additive, ᐍ(m, mrca|mSiSj) is exactly the path length
from the mrca of (Ti, Tj) to m. In other words, the path
length from the mrca of ( Ti0 , Tj0 ) to m is large stand ( Ti0 ,

Tj0 ) is a true neighboring pair. However, in real applications D is rarely additive, therefore the root m is selected
so as to avoid noise from stochastic errors involved with
large distance estimates [17]. To this end, m is selected
such that the distance from the farthest object to root m is
minimal,
med = argminm'∈S{max{D(m'x)|x = 1,..., n}}

(7)

Ti' for each Ti ∈   by T{i0 j0} if T{i0 j0} is its potential
neighbor.
• Stopping step: If |   | > 1 goto the Selection step, otherwise output the tree.
This algorithm is similar to approaches described elsewhere [19-21], however, an essential difference is that we
estimate path lengths and edge lengths by using triplets.

Local rearrangement
The heart of the clustering algorithm is the largest path
length criterion, at which the path length from the mrca of
(Ti, Tj) to med is estimated by ᐍ(med, mrca|med, Si, Sj)
using Equation 4. Thus, as path length we take the average
of the lengths obtained from at most O(n2 triplets {med, si,
Page 10 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

med

med

T{

T{

i,j }

T{

i,y}

Ti
Tx

med

Ti

Tj

Ty

Tx

(a)

Tj

i,x}

Ty

Ti
Tj

(b)

Ty

Tx

(c)

Figure 6
criterion
Reconstruction of new rooted tree T{ij} using the the preorder traversal procedure based on the largest average path length
Reconstruction of new rooted tree T{ij} using the the preorder traversal procedure based on the largest average path length
criterion. If (Tx, Ty) is the neighboring pair, we stick to the suggested grouping of Ti and Tj (see Figure 6a). Otherwise, if (Tx, Tj)
or (Ty, Tj) is the neighboring pair, we switch to the trees displayed in Figure 6b or 6c, respectively.

sj} ∈ med × Si × Sj. This average may not be the representative estimate of the true path length. Moreover the root
med may be too far way from the mrca and this leads to an
inaccurate estimate of the path length.
To take these problems into account, we extend the clustering algorithm. To this end, imagine the algorithm has
clustered Ti and Tj with corresponding disjoint leaf sets Si,
Sj ⊂ S (we have finished the agglomeration step). Thus, we
have created the newly rooted tree T{ij} with leaf set Sij =
{Si ∪ Sj} and the set of unclassified objects S0(Sij) = S - Sij.
In the following, we describe the nearest neighbor interchange operation around the root of Ti upon condition
that Ti consists of two rooted subtrees Tx, Ty (Figure 6a).
First, we estimate average path lengths from the unclassified object set S0(Sij) to the mrca of (Tx, Ty), (Tx, Tj) and (Ty,
Tj) as
1
| S0 (Sij ) || Sx || Sy | ( s

∑

( s0r | s0 sx sy )

(S0 (Sij )Sx S j | Sx S j ) ≡

1
| S0 (Sij ) || Sx || S j | ( s

∑

( s0r | s0 sx s j )

(10b)

(S0 (Sij )Sy S j | Sy S j ) ≡

1
| S0 (Sij ) || Sy || S j | ( s

∑

( s0r | s0 sy s j ).

(10c)

(S0 (Sij )Sx Sy | Sx Sy ) ≡

0 ,sx ,sy )∈S0 (Sij )×Sx ×Sy

0 ,sx ,s j )∈S0 (Sij )×Sx ×S j

0 ,sy ,s j )∈S0 (Sij )×Sy ×S j

ᐍ(S0(Sij)|SxSy) ≥ max{ᐍ(S0(Sij)|SxSj), ᐍ(S0(Sij)|SySj)}
we stick to the suggested grouping of Tx and Ty (see Figure
6a). Otherwise, if ᐍ(S0(Sij)|SxSj) or ᐍ(S0(Sij)|SySj) is larger
than the remaining average path lengths, we swap Ty and
Tj or Tx and Tj as displayed in Figure 6b or 6c, respectively.
Note that, this decision can be considered as a correction
of the largest path length criterion by taking all possible
triplets into account. We call the correction the largest average path length criterion.
We now explain the preorder traversal procedure [31] to
reconstruct the rooted tree Ti using the nearest neighbor
interchange operation based on the largest average path
length criterion (Ti is a subtree of T{ij} = (Ti, Tj)):
Preorder traversal procedure (Ti)
• Step 1: If Ti is a single leaf, return.

(10a)

For convenience, we will use ᐍ(S0(Sij)|SxSy) instead of
ᐍ(S0(Sij)SxSy|SxSy). We now use the average path lengths
from Equation 10 to decide which pair of subtrees among
(Tx, Ty), (Tx, Tj) and (Ty, Tj) is preferred. More specifically,
if

• Step 2: Otherwise, Ti consists of two subtrees Tx and Ty.
Do the nearest neighbor interchange operation around
the root of Ti based on the largest average path length
criterion (Equation 10). If Tx and Tj (or Ty and Tj) were
exchanged, estimate new edge lengths using Equation 5.
• Step 3: Apply the preorder traversal procedure to two
rooted subtrees of Ti.
Representative sets and shortest triplets
For a set S of sequences (or taxa), the (genetic) distance
matrix D is typically not additive due to stochastic errors

Page 11 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

S (S )
0 ij

http://www.biomedcentral.com/1471-2105/6/92

med

(med, mrca | med, si , s j ) =

1
(D(med, si ) + D(med, s j ) − D( si s j )).
2

(11)

The second approach takes the average distance
(med, mrca | med, Si , S j ) ≡

mrca

Tri

Trj

i

r

j

r

i

1
∑ (med, mrca | med, si , s j ).
| Si || S j | ( s ,s )∈S ×S

4
2

6

1
5
3
we select 3 j pick {1, and min(k, |Sj|) 5, 6} from
root of 7i andwe with |Si|)2} from and {4, length, respectively,
i.e. for kT=onlyTmin(k, respect to the path closest leaves to the
Figure
we select only min(k, |Si|) and min(k, |Sj|) closest leaves to the
root of Ti and Tj with respect to the path length, respectively,
i.e. for k = 3 we pick {1, 2} from Tri and {4, 5, 6} from Trj .
The leaf set {1, 2} (or {4, 5, 6}) is the 3-representative leaf set
of the rooted subtree Tri . (or Trj ).

[17]. Larger distances between two sequences are less
accurately estimated. This leads to a low performance of
both the clustering algorithm and the preorder traversal
procedure for divergent data sets.
In earlier work [10,11], we have presented simple representative concepts to reduce stochastic error involved in
large distances. Here, we extend our work by introducing
the so-called k-representative set concept. We use now
genetic distances instead of topological distances (all
edges have length 1). Our motivation is to reduce the
computational complexity and to exclude objects far away
from the root under consideration. In the clustering algorithm, the path length from the mrca of (Ti, Tj) to med (see
Figure 7) can be estimated by two approaches. The first
method picks randomly one pair (si, sj) ∈ Si × Sj then
computes

j

i

(12)

j

Both approaches suffer from noise. Estimating the path
length using Equation 11 may be inaccurate because it
randomly picks a pair (si, sj) which may not be really representative. Equation 12 may be problematic, especially
since it might be susceptible to noise, due to the possibility of including long- distances with large stochastic
errors.
To overcome these problems, we select only min(k, |Si|)
and min(k, |Sj|) closest leaves to the root of Ti and Tj with
respect to the path length, respectively. To illustrate, for k
= 3 we pick {1, 2} from Ti and {4, 5, 6} from Tj in Figure 7.
We now define Sik as the set of min(k, |Si|) closest leaves
to the root of Ti. Sik is called the k-representative leaf set.
Hereafter, we estimate similar to Equation 4 the path
length from the mrca of (Ti, Tj) to med as
(med, mrca | med, Sik , Sk ) =
j

1

∑

| Sik || Sk | ( sk ,sk )∈Sk ×Sk
j
i

j

i

(med, mrca | med, sik , sk )
j

(13)

j

which is only based on the k-representative leaf sets. Now
we can perform the clustering algorithm with reduced
complexity. However, we also want to improve the preorder traversal procedure. The average path length from the
unclassified object set S0(Sij) to the mrca of (Ti, Tj) is estimated by Equation 10 which also suffers from noise. To
overcome this problem, we select only min(k, |S0(Sij)|)
unclassified objects closest to the root of tree T{ij} with
respect to distances ( s0r | s0Sik Sk ) where s0 ∈ S0(Sij). We
j
k
call the subset, denoted S0 (Sij), k-representative unclassified
object set.
k
k
We now define {s0 , sik , sk } ∈ S0 (Sij ) × Sik × Sk a shortest trij
j
plet, which contains three representatives of the three kk
representative sets. By construction, s0 , sik , sk are close to
j

the root of T{ij} and close to each other. Therefore, the
k
edge length estimates based on shortest triplet { s0 , sik , sk }
j

are less susceptible to estimation errors.

Page 12 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

We now rewrite Equation 10 to estimate the average path
length from the representative unclassified object set

- (iv): Delete Ti0 and Tj0 and add T{i0 j0} to   .

k
S0 (Sij) to the mrca of (Ti, Tj) using only shortest triplets as

- (v): Find the potential neighbor for the new rooted tree

k
k k
(S0 (Sij ) | Sx Sy ) ≡

1

k
k
(S0 (Sij ) | Sy Sk ) ≡
j

k
k
k
( s0r | s0 sk sy )
x

(14a)

∑

k
k
( s0r | s0 sk sk )
x j

(14b)

k
k
k
| S0 (Sij ) || Sx || Sy | ( sk ,sk ,sk )∈S
0

k
k
(S0 (Sij ) | Sx Sk ) ≡
j

T{i0 j0} using Equation 8 based on representative sets, and

∑
k

x

y

1

k
k
0 (Sij )×Sx ×Sy

k
k
| S0 (Sij ) || Sx || Sk | ( sk ,sk ,sk )∈Sk (S )×Sk ×Sk
j
x
j
0 x j
0 ij

1

∑

k
k
| S0 (Sij ) || Sy || Sk | ( sk ,sk ,sk )∈Sk (S
j
0 y

j

0

replace Ti' for each Ti ∈   by T{i0 j0} if T{i0 j0} is its potential neighbor.
• Local rearrangement step: Apply the preorder traversal

k
k k
( s0 r | s0 sy sk )
j

(14c)

k
k
ij )×Sy ×S j

In short, the preorder traversal procedure uses only shortest triplets to estimate path lengths as well as edge lengths.
Shortest triplet clustering algorithm (STC)
We introduce now the shortest triplet clustering algorithm
by combining the clustering algorithm, the local rearrangement, the k-representative sets, and the shortest triplets approach.
Shortest triplet clustering algorithm (STC)
• Initial step:

- (i): Find the median object med using Equation 7.
- (ii): Set   = {T1,..., Tn} - {Tmed} and for each Ti ∈  
its representative leaf set Sik = {i}.
- (iii): Find for each Ti ∈   its potential neighbor Ti' ∈  
using Equation 8.

procedure to the rooted subtrees Ti0 and Tj0 of the new
rooted tree T{i0 j0} based on only shortest triplets.
• Stopping step: If |   | > 1, goto Selection step, otherwise output the tree.
The complexity of STC
Now we briefly describe the complexity of the STC. At the
initial step, (i), (ii), and (iii) are done in O(n2), O(n) and
O(n2) time, respectively. Thus, the complexity of the initial step is O(n2). The selection step is done in O(n). At the
agglomeration step, (i), (ii), (iii), (iv), and (v) are done in
O(k3), O(k), O(nk2), O(1), and O(nk2) time, respectively.
Thus, the complexity of the agglomeration step is O(nk2 +
k3). Finally, we are estimating the complexity of the preorder traversal procedure based on only shortest triplets.
Step 1 is done in constant time. Step 2, the nearest neighbor interchange operation around the root of Ti costs
O(k3). Estimating new edge lengths is done in O(k3) time.

• Selection step (largest path length criterion): Find the

Re-computing the k-representative leaf set Sik of Ti based
on k-representative leaf sets of its rooted subtrees Tx and Ty
costs O(k) time. Finally, re-computing the k-representative

neighboring pair ( Ti0 , Tj0 ) using Equation 9.

k
unclassified object set S0 (Si) of Ti based on the k-repre-

• Agglomeration step:

sentative leaf set Sik of Tj and the k-representative unclas-

- (i): Combine Ti0 and Tj0 into a new rooted tree T{i0 j0}
with root i0j0, and estimate new edge lengths of T{i0 j0}
using Equation 5 based on shortest triplets.
- (ii): Compute the k-representative leaf set Sik j of
0 0

T{i0 j0} . based on k-representative leaf sets Sik and Sk of
j
0

0

Ti0 and Tj0 , respectively.
- (iii): Compute the k-representative unclassified object

k
sified object set S0 (Sij) of T{ij} is done in O(k) time. Thus,
the complexity of step 2 is O(k3). Step 3 is done in constant time. Step 1, step 2, and step 3 are repeated O(n)
times so the complexity of the preorder traversal procedure is O(nk3).

In the STC algorithm, the selection step, the agglomeration step and the local rearrangement step are repeated (n
- 2) times so the overall complexity of the STC algorithm
is O(n2k3). Practically, we chose k = 5 as a good compromise between the accuracy and computational complexity
for all data sets. That is, the practical complexity of the
STC algorithm is only O(n2).

k
set S0 (Si0 j0 ) of T{i0 j0} .

Page 13 of 14
(page number not for citation purposes)

BMC Bioinformatics 2005, 6:92

http://www.biomedcentral.com/1471-2105/6/92

Authors' contributions

22.

Both authors participated in the design of the study and
performed the analysis. LSV implemented the algorithms.
Both authors wrote and approved the final manuscript.

23.
24.

Acknowledgements
We would like to express special thanks to Heiko Schmidt for his technical
support. We thank Gunter Weiss, Ingo Ebersberger, Tanja Gesell and Jutta
Buschbom for carefully reading the manuscript. We acknowledge the use
of supercomputing resources of the ZAM/NIC at the Research Center
Jiilich. We thank three anonymous referees for helpful comments.

References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.

12.
13.

14.
15.

16.
17.
18.
19.
20.
21.

Saitou N, Nei M: The Neighbor – joining Method: A New
Method for Reconstructing Phylogenetic Trees. Mol Biol Evol
1987, 4:406-425.
Strimmer K, von Haeseler A: Quartet Puzzling: A Quartet Maximum – Likelihood Method for Reconstructing Tree
Topologies. Mol Biol Evol 1996, 13:964-969.
Gascuel O: BIONJ: An Improved Version of the NJ Algorithm
Based on a Simple Model of Sequence Data. Mol Biol Evol 1997,
14:685-695.
Huson DH, Nettles SM, Warnow TJ: Disk-Covering, a Fast-Converging Method for Phylogenetic Reconstruction. J Comput Biol
1999, 6:369-386.
Bruno WJ, Socci ND, Halpern AL: Weighted Neighbor Joining: A
Likelihood Based-Approach to Distance-Based Phylogeny
Reconstruction. Mol Biol Evol 2000, 17:189-197.
Desper R, Gascuel O: Fast and Accurate Phylogeny Reconstruction Algorithms Based on the Minimum-Evolution
Principle. J Comput Biol 2002, 9:687-706.
Csürös M: Fast Recovery of Evolutionary Trees with Thousands of Nodes. J Comput Biol 2002, 9:277-297.
Guindon S, Gascuel O: A Simple, Fast and Accurate Algorithm
to Estimate Large Phylogenies by Maximum Likelihood. Syst
Biol 2003, 52:696-704.
Stamatakis A, Ludwig T, Meier H: RAxML-III: A fast program for
maximum likelihood-based inference of large phylogenetic
trees. Bioinformatics 2005, 21:456-463.
Vinh LS, von Haeseler A: IQPNNI: Moving fast through tree
space and stopping in time. Mol Biol Evol 2004, 21:1565-1571.
Vinh LS, Schmidt HA, von Haeseler A: PhyNav: A Novel
Approach to Reconstruct Large Phylogenies. In Proceedings of
the 28th Annual German Classification Society Conference (GfKl 2004)
Dortmund, Germany; 2004 in press.
Charleston MA: Hitch-Hiking: A Parallel Heuristic Search
Strategy, Applied to the Phylogeny Problem. J Comput Biol
2001, 8:79-91.
Brauer MJ, Holder MT, Dries LA, Zwickl DJ, Lewis PO, Hillis DM:
Genetic Algorithms and Parallel Processing in MaximumLikelihood Phylogeny Inference. Mol Biol Evol 2002,
19:1717-1726.
Schmidt HA, Strimmer K, Vingron M, von Haeseler A: TREE-PUZZLE: Maximum likelihood phylogenetic analysis using quartets and parallel computing. Bioinformatics 2002, 18:502-504.
Schmidt HA, von Haeseler A: Maximum Likelihood Analysis
Using TREE-PUZZLE. In Current Protocols in Bioinformatics Edited
by: Baxevanis AD, Davison DB, Page RDM, Stormo G, Stein L. New
York, USA: Wiley and Sons; 2003:6.6.1-6.6.25.
Cavalli-Sforza L, Edwards AWF: Phylogenetic analysis: Models
and estimation procedures. Am J Hum Genet 1967, 19:233-257.
Fitch W, Margoliash E: Construction of Phylogenetic trees. Science 1967, 155:279-284.
Hartigan AJ: Clustering Algorithms John Wiley and Sons, Inc; 1975.
Farris J: On the phenetic approach to vertebrate
classification. 1977, 17:823-850.
Klotz NKRB LC, Mitchell RM: Calculation of evolutionary trees
from sequence data. Proc Natl Acad Sci USA 1979, 76:4516-4520.
Li WH: Simple method for constructing phylogenetic trees
from distance matrices. Proc Natl Acad Sci USA 1981,
78:1085-1089.

25.

26.
27.
28.

29.
30.
31.

Rambaut A, Crassly NC: Seq-Gen: An application for the Monte
Carlo simulation of DNA sequence evolution along phylogenetic trees. Comput Appl Biosci 1997, 13:235-238.
Kimura M: A Simple Method for Estimating Evolutionary
Rates of Base Substitutions through Comparative Studies of
Nucleotide Sequences. J Mol Evol 1980, 16:111-120.
Harding EF: The probabilities of rooted tree-shapes generated
by random bifurcation. Adv Appl Prob 1971, 3:44-77.
Swofford DL, Olsen GJ, Waddell PJ, Hillis DM: Phylogeny Reconstruction. In Molecular Systematics 2nd edition. Edited by: Hillis DM,
Moritz C, Mable BK. Sunderland, Massachusetts: Sinauer Associates;
1996:407-514.
Felsenstein J: PHYLIP (Phylogeny Inference Package) version
3.5c. Department of Genetics, University of Washington, Seattle 1993
[http://evolution.genetics.washington.edu/phylip.html].
Robinson DR, Foulds LR: Comparison of phylogenetic trees.
Mathematical Biosciences 1981, 53:131-147.
Buneman P: The recovery of trees from measures of dissimilarity. In Mathematics in the archaeological and historical sciences Edited
by: Hodson, Lendall, Tautu. Edinburgh: Edinburgh university press;
1971.
Semple C, Steel M: Phylogenetics OXFORD univerity press; 2003.
Felsenstein J: Inferring Phylogenies Sunderland, Massachusetts: Sinauer
Associates; 2004.
Aho AV, Hopcroft JE, Ullman JD: The Design and Analysis of Computer
Algorithms Addison-Wesley Publishing Company; 1974.

Publish with Bio Med Central and every
scientist can read your work free of charge
"BioMed Central will be the most significant development for
disseminating the results of biomedical researc h in our lifetime."
Sir Paul Nurse, Cancer Research UK

Your research papers will be:
available free of charge to the entire biomedical community
peer reviewed and published immediately upon acceptance
cited in PubMed and archived on PubMed Central
yours — you keep the copyright

BioMedcentral

Submit your manuscript here:
http://www.biomedcentral.com/info/publishing_adv.asp

Page 14 of 14
(page number not for citation purposes)

</pre>
</body>
</html>
